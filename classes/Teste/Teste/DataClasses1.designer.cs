#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Teste
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="LI4")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAvaliacao(Avaliacao instance);
    partial void UpdateAvaliacao(Avaliacao instance);
    partial void DeleteAvaliacao(Avaliacao instance);
    partial void InsertCidade(Cidade instance);
    partial void UpdateCidade(Cidade instance);
    partial void DeleteCidade(Cidade instance);
    partial void InsertPontos_Interesse(Pontos_Interesse instance);
    partial void UpdatePontos_Interesse(Pontos_Interesse instance);
    partial void DeletePontos_Interesse(Pontos_Interesse instance);
    partial void InsertPontosVisitado(PontosVisitado instance);
    partial void UpdatePontosVisitado(PontosVisitado instance);
    partial void DeletePontosVisitado(PontosVisitado instance);
    partial void InsertViagem(Viagem instance);
    partial void UpdateViagem(Viagem instance);
    partial void DeleteViagem(Viagem instance);
    partial void InsertUtilizador(Utilizador instance);
    partial void UpdateUtilizador(Utilizador instance);
    partial void DeleteUtilizador(Utilizador instance);
    partial void InsertPontosGuardado(PontosGuardado instance);
    partial void UpdatePontosGuardado(PontosGuardado instance);
    partial void DeletePontosGuardado(PontosGuardado instance);
    partial void InsertPai(Pai instance);
    partial void UpdatePai(Pai instance);
    partial void DeletePai(Pai instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Teste.Properties.Settings.Default.LI4ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Avaliacao> Avaliacaos
		{
			get
			{
				return this.GetTable<Avaliacao>();
			}
		}
		
		public System.Data.Linq.Table<Cidade> Cidades
		{
			get
			{
				return this.GetTable<Cidade>();
			}
		}
		
		public System.Data.Linq.Table<Pontos_Interesse> Pontos_Interesses
		{
			get
			{
				return this.GetTable<Pontos_Interesse>();
			}
		}
		
		public System.Data.Linq.Table<PontosVisitado> PontosVisitados
		{
			get
			{
				return this.GetTable<PontosVisitado>();
			}
		}
		
		public System.Data.Linq.Table<Viagem> Viagems
		{
			get
			{
				return this.GetTable<Viagem>();
			}
		}
		
		public System.Data.Linq.Table<Utilizador> Utilizadors
		{
			get
			{
				return this.GetTable<Utilizador>();
			}
		}
		
		public System.Data.Linq.Table<PontosGuardado> PontosGuardados
		{
			get
			{
				return this.GetTable<PontosGuardado>();
			}
		}
		
		public System.Data.Linq.Table<Pai> Pais
		{
			get
			{
				return this.GetTable<Pai>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Avaliacao")]
	public partial class Avaliacao : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAvaliacao;
		
		private int _IDUtilizador;
		
		private int _IDPontoInteresse;
		
		private int _Avaliacao1;
		
		private EntityRef<Pontos_Interesse> _Pontos_Interesse;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAvaliacaoChanging(int value);
    partial void OnIDAvaliacaoChanged();
    partial void OnIDUtilizadorChanging(int value);
    partial void OnIDUtilizadorChanged();
    partial void OnIDPontoInteresseChanging(int value);
    partial void OnIDPontoInteresseChanged();
    partial void OnAvaliacao1Changing(int value);
    partial void OnAvaliacao1Changed();
    #endregion
		
		public Avaliacao()
		{
			this._Pontos_Interesse = default(EntityRef<Pontos_Interesse>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAvaliacao", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAvaliacao
		{
			get
			{
				return this._IDAvaliacao;
			}
			set
			{
				if ((this._IDAvaliacao != value))
				{
					this.OnIDAvaliacaoChanging(value);
					this.SendPropertyChanging();
					this._IDAvaliacao = value;
					this.SendPropertyChanged("IDAvaliacao");
					this.OnIDAvaliacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUtilizador", DbType="Int NOT NULL")]
		public int IDUtilizador
		{
			get
			{
				return this._IDUtilizador;
			}
			set
			{
				if ((this._IDUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._IDUtilizador = value;
					this.SendPropertyChanged("IDUtilizador");
					this.OnIDUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPontoInteresse", DbType="Int NOT NULL")]
		public int IDPontoInteresse
		{
			get
			{
				return this._IDPontoInteresse;
			}
			set
			{
				if ((this._IDPontoInteresse != value))
				{
					if (this._Pontos_Interesse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPontoInteresseChanging(value);
					this.SendPropertyChanging();
					this._IDPontoInteresse = value;
					this.SendPropertyChanged("IDPontoInteresse");
					this.OnIDPontoInteresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Avaliacao", Storage="_Avaliacao1", DbType="Int NOT NULL")]
		public int Avaliacao1
		{
			get
			{
				return this._Avaliacao1;
			}
			set
			{
				if ((this._Avaliacao1 != value))
				{
					this.OnAvaliacao1Changing(value);
					this.SendPropertyChanging();
					this._Avaliacao1 = value;
					this.SendPropertyChanged("Avaliacao1");
					this.OnAvaliacao1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pontos_Interesse_Avaliacao", Storage="_Pontos_Interesse", ThisKey="IDPontoInteresse", OtherKey="idPonto", IsForeignKey=true)]
		public Pontos_Interesse Pontos_Interesse
		{
			get
			{
				return this._Pontos_Interesse.Entity;
			}
			set
			{
				Pontos_Interesse previousValue = this._Pontos_Interesse.Entity;
				if (((previousValue != value) 
							|| (this._Pontos_Interesse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pontos_Interesse.Entity = null;
						previousValue.Avaliacaos.Remove(this);
					}
					this._Pontos_Interesse.Entity = value;
					if ((value != null))
					{
						value.Avaliacaos.Add(this);
						this._IDPontoInteresse = value.idPonto;
					}
					else
					{
						this._IDPontoInteresse = default(int);
					}
					this.SendPropertyChanged("Pontos_Interesse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Avaliacao", Storage="_Utilizador", ThisKey="IDUtilizador", OtherKey="IdUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Avaliacaos.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Avaliacaos.Add(this);
						this._IDUtilizador = value.IdUtilizador;
					}
					else
					{
						this._IDUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Cidade")]
	public partial class Cidade : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idCidade;
		
		private string _Nome;
		
		private int _idPais;
		
		private EntitySet<Pontos_Interesse> _Pontos_Interesses;
		
		private EntityRef<Pai> _Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidCidadeChanging(int value);
    partial void OnidCidadeChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnidPaisChanging(int value);
    partial void OnidPaisChanged();
    #endregion
		
		public Cidade()
		{
			this._Pontos_Interesses = new EntitySet<Pontos_Interesse>(new Action<Pontos_Interesse>(this.attach_Pontos_Interesses), new Action<Pontos_Interesse>(this.detach_Pontos_Interesses));
			this._Pai = default(EntityRef<Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCidade", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idCidade
		{
			get
			{
				return this._idCidade;
			}
			set
			{
				if ((this._idCidade != value))
				{
					this.OnidCidadeChanging(value);
					this.SendPropertyChanging();
					this._idCidade = value;
					this.SendPropertyChanged("idCidade");
					this.OnidCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPais", DbType="Int NOT NULL")]
		public int idPais
		{
			get
			{
				return this._idPais;
			}
			set
			{
				if ((this._idPais != value))
				{
					if (this._Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPaisChanging(value);
					this.SendPropertyChanging();
					this._idPais = value;
					this.SendPropertyChanged("idPais");
					this.OnidPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Pontos_Interesse", Storage="_Pontos_Interesses", ThisKey="idCidade", OtherKey="idCidade")]
		public EntitySet<Pontos_Interesse> Pontos_Interesses
		{
			get
			{
				return this._Pontos_Interesses;
			}
			set
			{
				this._Pontos_Interesses.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Cidade", Storage="_Pai", ThisKey="idPais", OtherKey="IdPais", IsForeignKey=true)]
		public Pai Pai
		{
			get
			{
				return this._Pai.Entity;
			}
			set
			{
				Pai previousValue = this._Pai.Entity;
				if (((previousValue != value) 
							|| (this._Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pai.Entity = null;
						previousValue.Cidades.Remove(this);
					}
					this._Pai.Entity = value;
					if ((value != null))
					{
						value.Cidades.Add(this);
						this._idPais = value.IdPais;
					}
					else
					{
						this._idPais = default(int);
					}
					this.SendPropertyChanged("Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pontos_Interesses(Pontos_Interesse entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = this;
		}
		
		private void detach_Pontos_Interesses(Pontos_Interesse entity)
		{
			this.SendPropertyChanging();
			entity.Cidade = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pontos_Interesse")]
	public partial class Pontos_Interesse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idPonto;
		
		private string _Nome;
		
		private int _Classificacao;
		
		private string _Mapa;
		
		private int _idCidade;
		
		private int _nrPessoasVisitaram;
		
		private decimal _longitude;
		
		private decimal _latitude;
		
		private EntitySet<Avaliacao> _Avaliacaos;
		
		private EntitySet<PontosVisitado> _PontosVisitados;
		
		private EntitySet<PontosGuardado> _PontosGuardados;
		
		private EntityRef<Cidade> _Cidade;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidPontoChanging(int value);
    partial void OnidPontoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnClassificacaoChanging(int value);
    partial void OnClassificacaoChanged();
    partial void OnMapaChanging(string value);
    partial void OnMapaChanged();
    partial void OnidCidadeChanging(int value);
    partial void OnidCidadeChanged();
    partial void OnnrPessoasVisitaramChanging(int value);
    partial void OnnrPessoasVisitaramChanged();
    partial void OnlongitudeChanging(decimal value);
    partial void OnlongitudeChanged();
    partial void OnlatitudeChanging(decimal value);
    partial void OnlatitudeChanged();
    #endregion
		
		public Pontos_Interesse()
		{
			this._Avaliacaos = new EntitySet<Avaliacao>(new Action<Avaliacao>(this.attach_Avaliacaos), new Action<Avaliacao>(this.detach_Avaliacaos));
			this._PontosVisitados = new EntitySet<PontosVisitado>(new Action<PontosVisitado>(this.attach_PontosVisitados), new Action<PontosVisitado>(this.detach_PontosVisitados));
			this._PontosGuardados = new EntitySet<PontosGuardado>(new Action<PontosGuardado>(this.attach_PontosGuardados), new Action<PontosGuardado>(this.detach_PontosGuardados));
			this._Cidade = default(EntityRef<Cidade>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPonto", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idPonto
		{
			get
			{
				return this._idPonto;
			}
			set
			{
				if ((this._idPonto != value))
				{
					this.OnidPontoChanging(value);
					this.SendPropertyChanging();
					this._idPonto = value;
					this.SendPropertyChanged("idPonto");
					this.OnidPontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Classificacao", DbType="Int NOT NULL")]
		public int Classificacao
		{
			get
			{
				return this._Classificacao;
			}
			set
			{
				if ((this._Classificacao != value))
				{
					this.OnClassificacaoChanging(value);
					this.SendPropertyChanging();
					this._Classificacao = value;
					this.SendPropertyChanged("Classificacao");
					this.OnClassificacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mapa", DbType="VarChar(MAX) NOT NULL", CanBeNull=false)]
		public string Mapa
		{
			get
			{
				return this._Mapa;
			}
			set
			{
				if ((this._Mapa != value))
				{
					this.OnMapaChanging(value);
					this.SendPropertyChanging();
					this._Mapa = value;
					this.SendPropertyChanged("Mapa");
					this.OnMapaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idCidade", DbType="Int NOT NULL")]
		public int idCidade
		{
			get
			{
				return this._idCidade;
			}
			set
			{
				if ((this._idCidade != value))
				{
					if (this._Cidade.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidCidadeChanging(value);
					this.SendPropertyChanging();
					this._idCidade = value;
					this.SendPropertyChanged("idCidade");
					this.OnidCidadeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nrPessoasVisitaram", DbType="Int NOT NULL")]
		public int nrPessoasVisitaram
		{
			get
			{
				return this._nrPessoasVisitaram;
			}
			set
			{
				if ((this._nrPessoasVisitaram != value))
				{
					this.OnnrPessoasVisitaramChanging(value);
					this.SendPropertyChanging();
					this._nrPessoasVisitaram = value;
					this.SendPropertyChanged("nrPessoasVisitaram");
					this.OnnrPessoasVisitaramChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Decimal(10,5) NOT NULL")]
		public decimal longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Decimal(10,5) NOT NULL")]
		public decimal latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pontos_Interesse_Avaliacao", Storage="_Avaliacaos", ThisKey="idPonto", OtherKey="IDPontoInteresse")]
		public EntitySet<Avaliacao> Avaliacaos
		{
			get
			{
				return this._Avaliacaos;
			}
			set
			{
				this._Avaliacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pontos_Interesse_PontosVisitado", Storage="_PontosVisitados", ThisKey="idPonto", OtherKey="idPonto")]
		public EntitySet<PontosVisitado> PontosVisitados
		{
			get
			{
				return this._PontosVisitados;
			}
			set
			{
				this._PontosVisitados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pontos_Interesse_PontosGuardado", Storage="_PontosGuardados", ThisKey="idPonto", OtherKey="IDPontoInteresse")]
		public EntitySet<PontosGuardado> PontosGuardados
		{
			get
			{
				return this._PontosGuardados;
			}
			set
			{
				this._PontosGuardados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Cidade_Pontos_Interesse", Storage="_Cidade", ThisKey="idCidade", OtherKey="idCidade", IsForeignKey=true)]
		public Cidade Cidade
		{
			get
			{
				return this._Cidade.Entity;
			}
			set
			{
				Cidade previousValue = this._Cidade.Entity;
				if (((previousValue != value) 
							|| (this._Cidade.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Cidade.Entity = null;
						previousValue.Pontos_Interesses.Remove(this);
					}
					this._Cidade.Entity = value;
					if ((value != null))
					{
						value.Pontos_Interesses.Add(this);
						this._idCidade = value.idCidade;
					}
					else
					{
						this._idCidade = default(int);
					}
					this.SendPropertyChanged("Cidade");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Avaliacaos(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Pontos_Interesse = this;
		}
		
		private void detach_Avaliacaos(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Pontos_Interesse = null;
		}
		
		private void attach_PontosVisitados(PontosVisitado entity)
		{
			this.SendPropertyChanging();
			entity.Pontos_Interesse = this;
		}
		
		private void detach_PontosVisitados(PontosVisitado entity)
		{
			this.SendPropertyChanging();
			entity.Pontos_Interesse = null;
		}
		
		private void attach_PontosGuardados(PontosGuardado entity)
		{
			this.SendPropertyChanging();
			entity.Pontos_Interesse = this;
		}
		
		private void detach_PontosGuardados(PontosGuardado entity)
		{
			this.SendPropertyChanging();
			entity.Pontos_Interesse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PontosVisitados")]
	public partial class PontosVisitado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _DataObservacao;
		
		private System.Nullable<int> _TipoInfor;
		
		private string _Comentario;
		
		private string _Url;
		
		private int _idViagem;
		
		private int _idPonto;
		
		private EntityRef<Pontos_Interesse> _Pontos_Interesse;
		
		private EntityRef<Viagem> _Viagem;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnDataObservacaoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataObservacaoChanged();
    partial void OnTipoInforChanging(System.Nullable<int> value);
    partial void OnTipoInforChanged();
    partial void OnComentarioChanging(string value);
    partial void OnComentarioChanged();
    partial void OnUrlChanging(string value);
    partial void OnUrlChanged();
    partial void OnidViagemChanging(int value);
    partial void OnidViagemChanged();
    partial void OnidPontoChanging(int value);
    partial void OnidPontoChanged();
    #endregion
		
		public PontosVisitado()
		{
			this._Pontos_Interesse = default(EntityRef<Pontos_Interesse>);
			this._Viagem = default(EntityRef<Viagem>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataObservacao", DbType="Date")]
		public System.Nullable<System.DateTime> DataObservacao
		{
			get
			{
				return this._DataObservacao;
			}
			set
			{
				if ((this._DataObservacao != value))
				{
					this.OnDataObservacaoChanging(value);
					this.SendPropertyChanging();
					this._DataObservacao = value;
					this.SendPropertyChanged("DataObservacao");
					this.OnDataObservacaoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoInfor", DbType="Int")]
		public System.Nullable<int> TipoInfor
		{
			get
			{
				return this._TipoInfor;
			}
			set
			{
				if ((this._TipoInfor != value))
				{
					this.OnTipoInforChanging(value);
					this.SendPropertyChanging();
					this._TipoInfor = value;
					this.SendPropertyChanged("TipoInfor");
					this.OnTipoInforChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comentario", DbType="VarChar(75)")]
		public string Comentario
		{
			get
			{
				return this._Comentario;
			}
			set
			{
				if ((this._Comentario != value))
				{
					this.OnComentarioChanging(value);
					this.SendPropertyChanging();
					this._Comentario = value;
					this.SendPropertyChanged("Comentario");
					this.OnComentarioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Url", DbType="VarChar(75)")]
		public string Url
		{
			get
			{
				return this._Url;
			}
			set
			{
				if ((this._Url != value))
				{
					this.OnUrlChanging(value);
					this.SendPropertyChanging();
					this._Url = value;
					this.SendPropertyChanged("Url");
					this.OnUrlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idViagem", DbType="Int NOT NULL")]
		public int idViagem
		{
			get
			{
				return this._idViagem;
			}
			set
			{
				if ((this._idViagem != value))
				{
					if (this._Viagem.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidViagemChanging(value);
					this.SendPropertyChanging();
					this._idViagem = value;
					this.SendPropertyChanged("idViagem");
					this.OnidViagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPonto", DbType="Int NOT NULL")]
		public int idPonto
		{
			get
			{
				return this._idPonto;
			}
			set
			{
				if ((this._idPonto != value))
				{
					if (this._Pontos_Interesse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPontoChanging(value);
					this.SendPropertyChanging();
					this._idPonto = value;
					this.SendPropertyChanged("idPonto");
					this.OnidPontoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pontos_Interesse_PontosVisitado", Storage="_Pontos_Interesse", ThisKey="idPonto", OtherKey="idPonto", IsForeignKey=true)]
		public Pontos_Interesse Pontos_Interesse
		{
			get
			{
				return this._Pontos_Interesse.Entity;
			}
			set
			{
				Pontos_Interesse previousValue = this._Pontos_Interesse.Entity;
				if (((previousValue != value) 
							|| (this._Pontos_Interesse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pontos_Interesse.Entity = null;
						previousValue.PontosVisitados.Remove(this);
					}
					this._Pontos_Interesse.Entity = value;
					if ((value != null))
					{
						value.PontosVisitados.Add(this);
						this._idPonto = value.idPonto;
					}
					else
					{
						this._idPonto = default(int);
					}
					this.SendPropertyChanged("Pontos_Interesse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Viagem_PontosVisitado", Storage="_Viagem", ThisKey="idViagem", OtherKey="IdViagem", IsForeignKey=true)]
		public Viagem Viagem
		{
			get
			{
				return this._Viagem.Entity;
			}
			set
			{
				Viagem previousValue = this._Viagem.Entity;
				if (((previousValue != value) 
							|| (this._Viagem.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Viagem.Entity = null;
						previousValue.PontosVisitados.Remove(this);
					}
					this._Viagem.Entity = value;
					if ((value != null))
					{
						value.PontosVisitados.Add(this);
						this._idViagem = value.IdViagem;
					}
					else
					{
						this._idViagem = default(int);
					}
					this.SendPropertyChanged("Viagem");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Viagem")]
	public partial class Viagem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdViagem;
		
		private string _Nome;
		
		private System.Nullable<System.DateTime> _DataInicio;
		
		private System.Nullable<System.DateTime> _DataFim;
		
		private int _idUtilizador;
		
		private EntitySet<PontosVisitado> _PontosVisitados;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdViagemChanging(int value);
    partial void OnIdViagemChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDataInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnDataInicioChanged();
    partial void OnDataFimChanging(System.Nullable<System.DateTime> value);
    partial void OnDataFimChanged();
    partial void OnidUtilizadorChanging(int value);
    partial void OnidUtilizadorChanged();
    #endregion
		
		public Viagem()
		{
			this._PontosVisitados = new EntitySet<PontosVisitado>(new Action<PontosVisitado>(this.attach_PontosVisitados), new Action<PontosVisitado>(this.detach_PontosVisitados));
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdViagem", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdViagem
		{
			get
			{
				return this._IdViagem;
			}
			set
			{
				if ((this._IdViagem != value))
				{
					this.OnIdViagemChanging(value);
					this.SendPropertyChanging();
					this._IdViagem = value;
					this.SendPropertyChanged("IdViagem");
					this.OnIdViagemChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInicio", DbType="Date")]
		public System.Nullable<System.DateTime> DataInicio
		{
			get
			{
				return this._DataInicio;
			}
			set
			{
				if ((this._DataInicio != value))
				{
					this.OnDataInicioChanging(value);
					this.SendPropertyChanging();
					this._DataInicio = value;
					this.SendPropertyChanged("DataInicio");
					this.OnDataInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFim", DbType="Date")]
		public System.Nullable<System.DateTime> DataFim
		{
			get
			{
				return this._DataFim;
			}
			set
			{
				if ((this._DataFim != value))
				{
					this.OnDataFimChanging(value);
					this.SendPropertyChanging();
					this._DataFim = value;
					this.SendPropertyChanged("DataFim");
					this.OnDataFimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idUtilizador", DbType="Int NOT NULL")]
		public int idUtilizador
		{
			get
			{
				return this._idUtilizador;
			}
			set
			{
				if ((this._idUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._idUtilizador = value;
					this.SendPropertyChanged("idUtilizador");
					this.OnidUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Viagem_PontosVisitado", Storage="_PontosVisitados", ThisKey="IdViagem", OtherKey="idViagem")]
		public EntitySet<PontosVisitado> PontosVisitados
		{
			get
			{
				return this._PontosVisitados;
			}
			set
			{
				this._PontosVisitados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Viagem", Storage="_Utilizador", ThisKey="idUtilizador", OtherKey="IdUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.Viagems.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.Viagems.Add(this);
						this._idUtilizador = value.IdUtilizador;
					}
					else
					{
						this._idUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PontosVisitados(PontosVisitado entity)
		{
			this.SendPropertyChanging();
			entity.Viagem = this;
		}
		
		private void detach_PontosVisitados(PontosVisitado entity)
		{
			this.SendPropertyChanging();
			entity.Viagem = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Utilizador")]
	public partial class Utilizador : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdUtilizador;
		
		private string _Nome;
		
		private string _NickName;
		
		private string _Email;
		
		private string _Password;
		
		private int _idPais;
		
		private EntitySet<Avaliacao> _Avaliacaos;
		
		private EntitySet<Viagem> _Viagems;
		
		private EntitySet<PontosGuardado> _PontosGuardados;
		
		private EntityRef<Pai> _Pai;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdUtilizadorChanging(int value);
    partial void OnIdUtilizadorChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnNickNameChanging(string value);
    partial void OnNickNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnidPaisChanging(int value);
    partial void OnidPaisChanged();
    #endregion
		
		public Utilizador()
		{
			this._Avaliacaos = new EntitySet<Avaliacao>(new Action<Avaliacao>(this.attach_Avaliacaos), new Action<Avaliacao>(this.detach_Avaliacaos));
			this._Viagems = new EntitySet<Viagem>(new Action<Viagem>(this.attach_Viagems), new Action<Viagem>(this.detach_Viagems));
			this._PontosGuardados = new EntitySet<PontosGuardado>(new Action<PontosGuardado>(this.attach_PontosGuardados), new Action<PontosGuardado>(this.detach_PontosGuardados));
			this._Pai = default(EntityRef<Pai>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdUtilizador", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdUtilizador
		{
			get
			{
				return this._IdUtilizador;
			}
			set
			{
				if ((this._IdUtilizador != value))
				{
					this.OnIdUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._IdUtilizador = value;
					this.SendPropertyChanged("IdUtilizador");
					this.OnIdUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NickName", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string NickName
		{
			get
			{
				return this._NickName;
			}
			set
			{
				if ((this._NickName != value))
				{
					this.OnNickNameChanging(value);
					this.SendPropertyChanging();
					this._NickName = value;
					this.SendPropertyChanged("NickName");
					this.OnNickNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idPais", DbType="Int NOT NULL")]
		public int idPais
		{
			get
			{
				return this._idPais;
			}
			set
			{
				if ((this._idPais != value))
				{
					if (this._Pai.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidPaisChanging(value);
					this.SendPropertyChanging();
					this._idPais = value;
					this.SendPropertyChanged("idPais");
					this.OnidPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Avaliacao", Storage="_Avaliacaos", ThisKey="IdUtilizador", OtherKey="IDUtilizador")]
		public EntitySet<Avaliacao> Avaliacaos
		{
			get
			{
				return this._Avaliacaos;
			}
			set
			{
				this._Avaliacaos.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_Viagem", Storage="_Viagems", ThisKey="IdUtilizador", OtherKey="idUtilizador")]
		public EntitySet<Viagem> Viagems
		{
			get
			{
				return this._Viagems;
			}
			set
			{
				this._Viagems.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_PontosGuardado", Storage="_PontosGuardados", ThisKey="IdUtilizador", OtherKey="IDUtilizador")]
		public EntitySet<PontosGuardado> PontosGuardados
		{
			get
			{
				return this._PontosGuardados;
			}
			set
			{
				this._PontosGuardados.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Utilizador", Storage="_Pai", ThisKey="idPais", OtherKey="IdPais", IsForeignKey=true)]
		public Pai Pai
		{
			get
			{
				return this._Pai.Entity;
			}
			set
			{
				Pai previousValue = this._Pai.Entity;
				if (((previousValue != value) 
							|| (this._Pai.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pai.Entity = null;
						previousValue.Utilizadors.Remove(this);
					}
					this._Pai.Entity = value;
					if ((value != null))
					{
						value.Utilizadors.Add(this);
						this._idPais = value.IdPais;
					}
					else
					{
						this._idPais = default(int);
					}
					this.SendPropertyChanged("Pai");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Avaliacaos(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Avaliacaos(Avaliacao entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_Viagems(Viagem entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_Viagems(Viagem entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
		
		private void attach_PontosGuardados(PontosGuardado entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = this;
		}
		
		private void detach_PontosGuardados(PontosGuardado entity)
		{
			this.SendPropertyChanging();
			entity.Utilizador = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PontosGuardados")]
	public partial class PontosGuardado : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private int _IDPontoInteresse;
		
		private int _IDUtilizador;
		
		private EntityRef<Pontos_Interesse> _Pontos_Interesse;
		
		private EntityRef<Utilizador> _Utilizador;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnIDPontoInteresseChanging(int value);
    partial void OnIDPontoInteresseChanged();
    partial void OnIDUtilizadorChanging(int value);
    partial void OnIDUtilizadorChanged();
    #endregion
		
		public PontosGuardado()
		{
			this._Pontos_Interesse = default(EntityRef<Pontos_Interesse>);
			this._Utilizador = default(EntityRef<Utilizador>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPontoInteresse", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int IDPontoInteresse
		{
			get
			{
				return this._IDPontoInteresse;
			}
			set
			{
				if ((this._IDPontoInteresse != value))
				{
					if (this._Pontos_Interesse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPontoInteresseChanging(value);
					this.SendPropertyChanging();
					this._IDPontoInteresse = value;
					this.SendPropertyChanged("IDPontoInteresse");
					this.OnIDPontoInteresseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUtilizador", DbType="Int NOT NULL")]
		public int IDUtilizador
		{
			get
			{
				return this._IDUtilizador;
			}
			set
			{
				if ((this._IDUtilizador != value))
				{
					if (this._Utilizador.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDUtilizadorChanging(value);
					this.SendPropertyChanging();
					this._IDUtilizador = value;
					this.SendPropertyChanged("IDUtilizador");
					this.OnIDUtilizadorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pontos_Interesse_PontosGuardado", Storage="_Pontos_Interesse", ThisKey="IDPontoInteresse", OtherKey="idPonto", IsForeignKey=true)]
		public Pontos_Interesse Pontos_Interesse
		{
			get
			{
				return this._Pontos_Interesse.Entity;
			}
			set
			{
				Pontos_Interesse previousValue = this._Pontos_Interesse.Entity;
				if (((previousValue != value) 
							|| (this._Pontos_Interesse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pontos_Interesse.Entity = null;
						previousValue.PontosGuardados.Remove(this);
					}
					this._Pontos_Interesse.Entity = value;
					if ((value != null))
					{
						value.PontosGuardados.Add(this);
						this._IDPontoInteresse = value.idPonto;
					}
					else
					{
						this._IDPontoInteresse = default(int);
					}
					this.SendPropertyChanged("Pontos_Interesse");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Utilizador_PontosGuardado", Storage="_Utilizador", ThisKey="IDUtilizador", OtherKey="IdUtilizador", IsForeignKey=true)]
		public Utilizador Utilizador
		{
			get
			{
				return this._Utilizador.Entity;
			}
			set
			{
				Utilizador previousValue = this._Utilizador.Entity;
				if (((previousValue != value) 
							|| (this._Utilizador.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Utilizador.Entity = null;
						previousValue.PontosGuardados.Remove(this);
					}
					this._Utilizador.Entity = value;
					if ((value != null))
					{
						value.PontosGuardados.Add(this);
						this._IDUtilizador = value.IdUtilizador;
					}
					else
					{
						this._IDUtilizador = default(int);
					}
					this.SendPropertyChanged("Utilizador");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pais")]
	public partial class Pai : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdPais;
		
		private string _Nome;
		
		private EntitySet<Cidade> _Cidades;
		
		private EntitySet<Utilizador> _Utilizadors;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdPaisChanging(int value);
    partial void OnIdPaisChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    #endregion
		
		public Pai()
		{
			this._Cidades = new EntitySet<Cidade>(new Action<Cidade>(this.attach_Cidades), new Action<Cidade>(this.detach_Cidades));
			this._Utilizadors = new EntitySet<Utilizador>(new Action<Utilizador>(this.attach_Utilizadors), new Action<Utilizador>(this.detach_Utilizadors));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdPais", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdPais
		{
			get
			{
				return this._IdPais;
			}
			set
			{
				if ((this._IdPais != value))
				{
					this.OnIdPaisChanging(value);
					this.SendPropertyChanging();
					this._IdPais = value;
					this.SendPropertyChanged("IdPais");
					this.OnIdPaisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(75) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Cidade", Storage="_Cidades", ThisKey="IdPais", OtherKey="idPais")]
		public EntitySet<Cidade> Cidades
		{
			get
			{
				return this._Cidades;
			}
			set
			{
				this._Cidades.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pai_Utilizador", Storage="_Utilizadors", ThisKey="IdPais", OtherKey="idPais")]
		public EntitySet<Utilizador> Utilizadors
		{
			get
			{
				return this._Utilizadors;
			}
			set
			{
				this._Utilizadors.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Pai = this;
		}
		
		private void detach_Cidades(Cidade entity)
		{
			this.SendPropertyChanging();
			entity.Pai = null;
		}
		
		private void attach_Utilizadors(Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.Pai = this;
		}
		
		private void detach_Utilizadors(Utilizador entity)
		{
			this.SendPropertyChanging();
			entity.Pai = null;
		}
	}
}
#pragma warning restore 1591
